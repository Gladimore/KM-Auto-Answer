const API_KEY = ""

const url="https://gemini-openai-proxy.deno.dev/v1/chat/completions",HEADERS={Authorization:`Bearer ${API_KEY}`,"Content-Type":"application/json"},config={autoClickSubmitButton:!0};function levenshtein(t,e){const o=[],i=t.length,n=e.length;for(let t=0;t<=i;t++)o[t]=[t];for(let t=0;t<=n;t++)o[0][t]=t;for(let s=1;s<=i;s++)for(let i=1;i<=n;i++){const n=t[s-1]===e[i-1]?0:1;o[s][i]=Math.min(o[s-1][i]+1,o[s][i-1]+1,o[s-1][i-1]+n)}return o[i][n]}function normalize(t){return t.toLowerCase().replace(/[^\w\s]|_/g,"").replace(/\s+/g," ")}function calculateSimilarity(t,e){const o=normalize(t),i=normalize(e),n=levenshtein(o,i),s=Math.max(o.length,i.length);return(s-n)/s*100}class QuizHandler{constructor(){this.form=document.getElementById("quiz-form"),this.tbody=this.form.querySelector("tbody"),this.question=document.querySelector("legend").innerText}showNotification(t,e=!0){e?console.log(`✅ Success: ${t}`):console.log(`⚠ Error: ${t}`)}getAllOptions(){return Array.from(this.tbody.querySelectorAll("tr")).map((t=>t.children[2].innerText))}simulateOptionClick(t){const e=this.tbody.querySelectorAll('input[type="radio"]')[t];e?(e.click(),this.showNotification(`✅ Option ${t+1} clicked.`)):this.showNotification(`⚠ No radio button found for option ${t+1}`,!1)}enableAndSubmit(){const t=document.getElementById("submitBtn");t?(t.removeAttribute("disabled"),t.click(),this.showNotification("✅ Form submitted successfully.")):this.showNotification("⚠ Submit button not found",!1)}async getAnswerFromGemini(){const t={model:"models/gemini-2.0-flash",messages:[{role:"user",content:`Given the question: "${this.question}" and these options: ${this.getAllOptions()}, what is the correct answer?  Explain your reasoning.  Provide the answer clearly at the beginning of your response.`}],temperature:.7,max_tokens:2048};try{const e=await fetch(url,{method:"POST",headers:HEADERS,body:JSON.stringify(t)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const{choices:o}=await e.json();return o[0].message.content}catch(t){throw this.showNotification(`Error fetching answer from Gemini: ${t.message}`,!1),t}}async findAndClickBestOption(){try{const t=await this.getAnswerFromGemini(),e=/^(.+?)\./,o=t.match(e),i=o?o[1].trim():"Answer not found",n=this.getAllOptions();let s=0,r=null;n.forEach(((t,e)=>{const o=calculateSimilarity(i,t);o>s&&(s=o,r=e)})),null!==r?(this.simulateOptionClick(r),config.autoClickSubmitButton&&this.enableAndSubmit()):this.showNotification("⚠ No matching option found.",!1)}catch(t){this.showNotification(`Error in findAndClickBestOption: ${t.message}`,!1)}}}const quizHandler=new QuizHandler;quizHandler.findAndClickBestOption();
